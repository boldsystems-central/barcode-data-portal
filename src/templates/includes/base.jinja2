<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <!-- Bootstrap core CSS -->
    <link href="/static/css/bootstrap.min.css" rel="stylesheet">

    <!-- Animation CSS -->
    <link href="/static/css/animate.css" rel="stylesheet">

    <link href="/static/font-awesome/css/font-awesome.min.css" rel="stylesheet">

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <!-- Custom styles for this template -->
    <link href="/static/css/style.css" rel="stylesheet">

    <!-- datatable stylesheet with scroll, buttons and checkboxes-->
    <link rel="stylesheet" type="text/css" href="/static/css/plugins/dataTables/datatables.min.css">
    <link rel="stylesheet" type="text/css" href="/static/css/plugins/textSpinners/spinners.css">
    <link rel="stylesheet" type="text/css" href="/static/css/plugins/blueimp/css/blueimp-gallery.min.css">
    <link rel="stylesheet" type="text/css" href="/static/css/plugins/slick/slick.css">
    <link rel="stylesheet" type="text/css" href="/static/css/plugins/slick/slick-theme.css">
    <link rel="stylesheet" type="text/css" href="/static/css/plugins/sweetalert/sweetalert.css">
    <script type="text/javascript" language="javascript" src="/static/js/jquery-3.5.1.min.js"></script>

    <!-- NEW datatable with scroll, buttons and checkboxes -->
    <script type="text/javascript" language="javascript" src="/static/js/plugins/dataTables/datatables.min.js"></script>

    {% if not search_page %}
    <script type="text/javascript">
        // TODO: change from hardcode to a separate mapping file
        const searchTermScopes = [
            "tax",
            "geo",
            "inst",
            "ids",
            "bin",
            "recordsetcode",
        ]
        var searchTerms = new Set();

        async function clearQueryString() {
            $("input#query").val("");
        }

        async function focusOnQueryInput() {
            $("input#query").focus();
        }

        async function showDropdownMenu() {
            $(".dropdown-menu").show();
        }

        async function hideDropdownMenu() {
            $(".dropdown-menu").hide();
        }

        async function showDropdownSpinner() {
            $("#dropdown-spinner").removeClass("d-none");
        }

        async function hideDropdownSpinner() {
            $("#dropdown-spinner").addClass("d-none");
        }

        async function showDropdownError(msg) {
            $("#dropdown-error-msg").text(msg);
            $("#dropdown-error").removeClass("d-none");
        }

        async function hideDropdownError() {
            $("#dropdown-error-msg").text("");
            $("#dropdown-error").addClass("d-none");
        }

        async function addAutocompleteItems(scopeTermString) {
            await hideDropdownError();
            await clearDropdownItems();
            showDropdownSpinner();

            resp = await fetch("/api/terms?partial_term=" + scopeTermString);

            // Error message to dropdown if failed response
            if (!resp.ok) {
                hideDropdownSpinner();
                showDropdownError("Failed fetching terms");
                return false;
            }

            data = await resp.json();

            // Update dropdown
            if (data.length) {
                hideDropdownSpinner();
                await clearDropdownItems();
                await addDropdownItems(data);
                return true;
            } else {
                hideDropdownMenu();
            }

            return false;
        }

        async function addDropdownItems(items, direct = false) {
            items.forEach(item => {
                if (item.original_term.includes(" ")) {
                    searchTerm = `"${item.original_term}"[${item.scope}]`
                } else {
                    searchTerm = `${item.original_term}[${item.scope}]`
                }
                $(".dropdown-menu").append($("<a>", {
                    "class": "dropdown-item",
                    "onclick": "addConfirmedSearchTerm(this);",
                    //"onclick": item.scope == "ids" ? "enterDirectSearchTerm(this);" : "addConfirmedSearchTerm(this);",
                    text: searchTerm
                }));
            });
        }

        async function clearDropdownItems() {
            $(".dropdown-item").not(".dropdown-special").remove();
        }

        async function removeConfirmedSearchTerm(element) {
            searchTerm = element.parentNode.childNodes[0].textContent.trim();
            searchTerms.delete(searchTerm)
            element.parentNode.remove();
        }

        async function addConfirmedSearchTerm(element) {
            currentSearchTerm = element.innerHTML.trim()

            // If current search term has already been selected, just clear and close dropdown
            if (searchTerms.has(currentSearchTerm)) {
                hideDropdownMenu();
                clearDropdownItems();
                clearQueryString();
                focusOnQueryInput();
                return;
            }

            // Add new search term
            searchTerms.add(currentSearchTerm)
            $("#search-terms").append($("<span/>", {
                "class": "badge badge-pill",
                "style": "color: white; font-size: 15px",
                text: currentSearchTerm + " "
            }).append($("<a/>", {
                "style": "color: red",
                "onclick": "removeConfirmedSearchTerm(this);",
                text: "X"
            })))

          $("#search-terms").scrollTop($("#search-terms")[0].scrollHeight);

            hideDropdownMenu();
            clearDropdownItems();
            clearQueryString();
            focusOnQueryInput();
        }

        async function enterDirectSearchTerm(element) {
            currentSearchTerm = element.innerHTML.trim()

            // Fix to trim up until square bracket scope
            currentSearchTerm = currentSearchTerm.slice(0, currentSearchTerm.indexOf("["))
            window.location.href = "/record/" + currentSearchTerm;
        }

        async function checkAutocomplete(query) {
            // Check if scope is mentioned
            querySplit = query.split(":", 2);

            if (querySplit.length > 1) {
                let scope = querySplit[0].toLowerCase();
                if (!searchTermScopes.includes(scope)) {
                    showDropdownSpinner();
                    showDropdownMenu();
                    await addAutocompleteItems(query);
                    return;
                }

                // Ignore if term is zero length
                let term = querySplit[1].trim();
                if (!term.length) {
                    hideDropdownError();
                    hideDropdownMenu();
                    return;
                }

                // Retrieve inner string if quoted. Exit early if empty quoted string
                if (term.split('"').length >= 2) {
                    term = term.split('"')[1].trim();
                }

                // Request to endpoint if term is more than 3 characters long
                if (term.length >= 3) {
                    showDropdownSpinner();
                    showDropdownMenu();

                    let scopeTermString = scope + ":" + term;
                    await addAutocompleteItems(scopeTermString);
                }
            } else {
                showDropdownSpinner();
                showDropdownMenu();

                // No scope included yet so submit assuming it's a record
                // but only show if it matches exactly
                await addAutocompleteItems(query);
            }
        }

        $(document).ready(async function () {
            // Trigger if whole query (or term) is 3 characters or more
            $("input[name='query']").on('input', async (evt) => {
                let query = evt.target.value;

                // Ignore if query is less than 3 characters
                if (query.length < 3) {
                    if (!query.length) {
                        hideDropdownMenu();
                    }
                    return;
                }

                await checkAutocomplete(query);
            });

            // Trigger on enter
            $("input[name='query']").on('keypress', async (evt) => {
                let query = evt.target.value;
                if (query.length && evt.which == 13) {
                    await checkAutocomplete(query);
                }
            });

            $("button[type='submit']").click(async (evt) => {
                // TODO: Add error message
                if (!searchTerms.size) {
                    return;
                }

                // Request /result
                window.location.href = "/result?query=" + Array.from(searchTerms).join(",")
            });
        }); //end Document Ready
    </script>
    <style>
        #search-banner {
            position: absolute;
            top: 100px;
            left: 50%;
            transform: translate(-50%, 0%);
            z-index: 10;
            overflow: inherit;
        }

        #search-banner h1 {
            color: white;
            font-weight: 700;
            font-size: 38px;
            text-transform: uppercase;
            text-shadow: none;
            letter-spacing: -1.5px;
        }

        #search-banner p {
            color: white;
            font-weight: 700;
            text-transform: uppercase;
            text-shadow: none;
        }

        #search-banner p {
            margin-bottom: 20px;
            font-size: 14px;
            line-height: 1.4;
        }

        #search-banner .input-group-addon {
            align-items: center;
            display: flex;
            padding: 9px 12px 9px 12px;
        }

        div#search-terms {
          margin-top: 10px;
          margin-bottom: 10px;
          height: 60px;
          overflow-y: auto;
        }

        #search-terms > .badge {
          background-color: #1ec2a0 !important;
        }

        .carousel-inner img {
            filter: brightness(.7);
        }
    </style>
    {% endif %}

    {% block head %}
    <title>BOLDPUBLIC{% block title %}{% endblock %}</title>
    {% endblock %}
</head>

<body id="page-top" class="landing-page">
    {% include "includes/navbar.jinja2" %}

    {% if not search_page %}
    <div id="search-carousel" class="carousel">
        <div id="search-banner" class="container">
            <div class="row col-lg-12">
                <h1 id="title">{{ title|e }}</h1>
            </div>
            <div class="row col-lg-7">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-addon"><i class="fa fa-search"></i><span>
                    </div>
                    <div class="dropdown">
                        <div class="dropdown-menu" aria-labelledby="query">
                            <a id="dropdown-spinner" class="dropdown-item dropdown-special">
                                <span class="loading dots"></span>
                                Loading...
                            </a>
                            <a id="dropdown-error" class="dropdown-item dropdown-special d-none">
                                <i class="fa fa-exclamation-triangle"></i>
                                <span id="dropdown-error-msg"></span>
                            </a>
                        </div>
                    </div>
                    <input type="text" id="query" name="query" class="form-control" placeholder="Enter search terms"
                        autocomplete="off">
                    <span class="input-group-append">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </span>
                </div>
            </div>
            <div id="search-terms">
            </div>
        </div>
        <div class="col-lg-5">
            {% block banner_extra %}{% endblock %}
        </div>
        <div class="carousel-inner">
            <!-- Set background for slide in css -->
            <div class='header-back {{ banner_bg_class or "arialislandcrater" }}'></div>
        </div>
    </div>
    {% endif %}

    {% block content %}{% endblock %}

    {% include "includes/footer.jinja2" %}

    <!-- Mainly scripts -->
    <script src="/static/js/popper.min.js"></script>
    <script src="/static/js/bootstrap.min.js"></script>
    <script src="/static/js/plugins/metisMenu/jquery.metisMenu.js"></script>
    <script src="/static/js/plugins/slimscroll/jquery.slimscroll.min.js"></script>
    <script src="/static/js/plugins/wow/wow.min.js"></script>

    <!-- Custom and plugin javascript -->
    <script src="/static/js/inspinia.js"></script>
    <script src="/static/js/plugins/pace/pace.min.js"></script>

    <!-- blueimp gallery -->
    <script src="/static/js/plugins/blueimp/jquery.blueimp-gallery.min.js"></script>

    <!-- slick carousel-->
    <script src="/static/js/plugins/slick/slick.min.js"></script>

    <!-- Jvectormap -->
    <script src="/static/js/plugins/jvectormap/jquery-jvectormap-2.0.2.min.js"></script>
    <script src="/static/js/plugins/jvectormap/jquery-jvectormap-world-mill-en.js"></script>

    <!-- ChartJS -->
    <script src="/static/js/plugins/chartJs/Chart.min.js"></script>
    <script src="/static/js/plugins/chartJs/chartjs-plugin-datalabels.min.js"></script>

    <!-- Plotly -->
    <script src="/static/js/plugins/plotly/plotly-2.20.0.min.js"></script>

    <!-- Sweet alert -->
    <script src="/static/js/plugins/sweetalert/sweetalert.min.js"></script>

    <script>

        $(document).ready(function () {

            $('body').scrollspy({
                target: '#navbar',
                offset: 80
            });

            // Page scrolling feature
            $('a.page-scroll').bind('click', function (event) {
                var link = $(this);
                $('html, body').stop().animate({
                    scrollTop: $(link.attr('href')).offset().top - 50
                }, 500);
                event.preventDefault();
                $("#navbar").collapse('hide');
            });
        });

        var cbpAnimatedHeader = (function () {
            var docElem = document.documentElement,
                header = document.querySelector('.navbar-default'),
                didScroll = false,
                changeHeaderOn = 100;
            function init() {
                window.addEventListener('scroll', function (event) {
                    if (!didScroll) {
                        didScroll = true;
                        setTimeout(scrollPage, 250);
                    }
                }, false);
            }
            function scrollPage() {
                var sy = scrollY();
                if (sy >= changeHeaderOn) {
                    $(header).addClass('navbar-scroll')
                }
                else {
                    $(header).removeClass('navbar-scroll')
                }
                didScroll = false;
            }
            function scrollY() {
                return window.pageYOffset || docElem.scrollTop;
            }
            init();

        })();

        // Activate WOW.js plugin for animation on scrol
        new WOW().init();

        // Country to country ISO code lookup, for jVectorMap
        var countryLookup = {
            "Afghanistan": "AF",
            "Albania": "AL",
            "Algeria": "DZ",
            "Andorra": "AD",
            "Angola": "AO",
            "Anguilla": "AI",
            "Antarctica": "AQ",
            "Antigua and Barbuda": "AG",
            "Argentina": "AR",
            "Armenia": "AM",
            "Aruba": "AW",
            "Australia": "AU",
            "Austria": "AT",
            "Azerbaijan": "AZ",
            "Bahamas": "BS",
            "Bahrain": "BH",
            "Bangladesh": "BD",
            "Barbados": "BB",
            "Belarus": "BY",
            "Belgium": "BE",
            "Belize": "BZ",
            "Benin": "BJ",
            "Bermuda": "BM",
            "Bhutan": "BT",
            "Bolivia": "BO",
            "Bosnia and Herzegovina": "BA",
            "Botswana": "BW",
            "Brazil": "BR",
            "British Virgin Islands": "VG",
            "Brunei": "BN",
            "Bulgaria": "BG",
            "Burkina Faso": "BF",
            "Burundi": "BI",
            "Cambodia": "KH",
            "Cameroon": "CM",
            "Canada": "CA",
            "Cape Verde": "CV",
            "Cayman Islands": "KY",
            "Central African Republic": "CF",
            "Chad": "TD",
            "Chile": "CL",
            "China": "CN",
            "Colombia": "CO",
            "Comoros": "KM",
            "Cook Islands": "CK",
            "Costa Rica": "CR",
            "Cote d'Ivoire": "CI",
            "Croatia": "HR",
            "Cuba": "CU",
            "Curacao": "CW",
            "Cyprus": "CY",
            "Czech Republic": "CZ",
            "Democratic Republic of the Congo": "CD",
            "Denmark": "DK",
            "Djibouti": "DJ",
            "Dominica": "DM",
            "Dominican Republic": "DO",
            "Ecuador": "EC",
            "Egypt": "EG",
            "El Salvador": "SV",
            "Equatorial Guinea": "GQ  ",
            "Eritrea": "ER",
            "Estonia": "EE",
            "Eswatini": "SZ",
            "Ethiopia": "ET",
            "Faeroe Islands": "FO",
            "Falkland Islands": "FK",
            "Fiji": "FJ",
            "Finland": "FI",
            "France": "FR",
            "French Guiana": "GF",
            "French Polynesia": "PF",
            "Gabon": "GA",
            "Gambia": "GM",
            "Georgia": "GE",
            "Germany": "DE",
            "Ghana": "GH",
            "Gibraltar": "GI",
            "Greece": "GR",
            "Greenland": "GL",
            "Grenada": "GD",
            "Guadeloupe": "GP",
            "Guam": "GU",
            "Guatemala": "GT",
            "Guernsey": "GG",
            "Guinea": "GN",
            "Guinea-Bissau": "GW",
            "Guyana": "GY",
            "Haiti": "HT",
            "Honduras": "HN",
            "Hungary": "HU",
            "Iceland": "IS",
            "India": "IN",
            "Indonesia": "ID",
            "Iran": "IR",
            "Iraq": "IQ",
            "Ireland": "IE",
            "Isle of Man": "IM",
            "Israel": "IL",
            "Italy": "IT",
            "Jamaica": "JM",
            "Japan": "JP",
            "Jersey": "JE",
            "Jordan": "JO",
            "Kazakhstan": "KZ",
            "Kenya": "KE",
            "Kiribati": "KI",
            "Kosovo": "XK",
            "Kuwait": "KW",
            "Kyrgyzstan": "KG",
            "Laos": "LA",
            "Latvia": "LV",
            "Lebanon": "LB",
            "Lesotho": "LS",
            "Liberia": "LR",
            "Libya": "LY",
            "Liechtenstein": "LI",
            "Lithuania": "LT",
            "Luxembourg": "LU",
            "Madagascar": "MG",
            "Malawi": "MW",
            "Malaysia": "MY",
            "Maldives": "MV",
            "Mali": "ML",
            "Malta": "MT",
            "Marshall Islands": "MH",
            "Martinique": "MQ",
            "Mauritania": "MR",
            "Mauritius": "MU",
            "Mayotte": "YT",
            "Mexico": "MX",
            "Micronesia": "FM",
            "Moldova": "MD",
            "Monaco": "MC",
            "Mongolia": "MN",
            "Montenegro": "ME",
            "Montserrat": "MS",
            "Morocco": "MA",
            "Mozambique": "MZ",
            "Myanmar": "MM",
            "Namibia": "NA",
            "Nauru": "NR",
            "Nepal": "NP",
            "Netherlands": "NL",
            "New Caledonia": "NC",
            "New Zealand": "NZ",
            "Nicaragua": "NI",
            "Niger": "NE",
            "Nigeria": "NG",
            "Niue": "NU",
            "North Korea": "KP",
            "North Macedonia": "MK",
            "Northern Mariana Islands": "MP",
            "Norway": "NO",
            "Oman": "OM",
            "Pakistan": "PK",
            "Palau": "PW",
            "Panama": "PA",
            "Papua New Guinea": "PG",
            "Paraguay": "PY",
            "Peru": "PE",
            "Philippines": "PH",
            "Pitcairn Islands": "PN",
            "Poland": "PL",
            "Portugal": "PT",
            "Puerto Rico": "PR",
            "Qatar": "QA",
            "Republic of the Congo": "CG",
            "Reunion": "RE",
            "Romania": "RO",
            "Russia": "RU",
            "Rwanda": "RW",
            "Saint Helena Ascension and Tristan da Cunha": "SH",
            "Saint Kitts and Nevis": "KN",
            "Saint Lucia": "LC",
            "Saint Vincent and the Grenadines": "VC",
            "Samoa": "WS",
            "San Marino": "SM",
            "Sao Tome and Principe": "ST",
            "Saudi Arabia": "SA",
            "Senegal": "SN",
            "Serbia": "RS",
            "Seychelles": "SC",
            "Sierra Leone": "SL",
            "Singapore": "SG",
            "Sint Maarten": "SX",
            "Slovakia": "SK",
            "Slovenia": "SI",
            "Solomon Islands": "SB",
            "Somalia": "SO",
            "South Africa": "ZA",
            "South Georgia and the South Sandwich Islands": "GS",
            "South Korea": "KR",
            "South Sudan": "SS",
            "Spain": "ES",
            "Sri Lanka": "LK",
            "Sudan": "SD",
            "Suriname": "SR",
            "Sweden": "SE",
            "Switzerland": "CH",
            "Syria": "SY",
            "Taiwan": "TW",
            "Tajikistan": "TJ",
            "Tanzania": "TZ",
            "Thailand": "TH",
            "Timor-Leste": "TL",
            "Togo": "TG",
            "Tokelau": "TK",
            "Tonga": "TO",
            "Trinidad and Tobago": "TT",
            "Tunisia": "TN",
            "Turkey": "TR",
            "Turkmenistan": "TM",
            "Tuvalu": "TV",
            "Uganda": "UG",
            "Ukraine": "UA",
            "United Arab Emirates": "AE",
            "United Kingdom": "GB",
            "United States": "US",
            "United States Virgin Islands": "VI",
            "Uruguay": "UY",
            "Uzbekistan": "UZ",
            "Vanuatu": "VU",
            "Venezuela": "VE",
            "Vietnam": "VN",
            "Yemen": "YE",
            "Zambia": "ZM",
            "Zimbabwe": "ZW"
        }
    </script>

</body>

</html>
